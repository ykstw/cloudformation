{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "VpcId" : {
      "Type" : "String"
    },
    "SubnetId" : {
      "Type" : "String"
    },
    "KeyName" : {
      "Description" : "Amazon EC2 Key Pair",
      "Type" : "AWS::EC2::KeyPair::KeyName"
    },
    "ImageId" : {
      "Description" : "Instance Image ID",
      "Default" : "ami-06a46da680048c8ae",
      "Type" : "String"
    },
    "InstanceType" : {
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.nano", "t2.micro", "m2.small"],
      "Description" : "Enter t2.nano, t2.micro or m2.small. Default is t2.micro."
    }
    
  },

  "Resources": {
    "LbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable all inbound LB access via port 80",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "80",
          "ToPort" : "80"
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "LB"}
        ]
      }
    },
    "SshSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "22",
          "ToPort" : "22"
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "SSH"}
        ]
      }
    },
    "ActiveELB" : {
        "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties" : {
          "LoadBalancerName" : "ActiveELB",
          "Listeners" : [ {
              "LoadBalancerPort" : "80",
              "InstancePort" : "8080",
              "Protocol" : "HTTP"
          }],
          "HealthCheck" : {
              "Target" : "TCP:8080",
              "HealthyThreshold" : "2",
              "UnhealthyThreshold" : "5",
              "Interval" : "30",
              "Timeout" : "5"
          },
          "SecurityGroups" : [ { "Ref": "LbSecurityGroup" } ],
          "Subnets" : [ { "Ref" : "SubnetId"} ],
          "Tags" : [
              {"Key" : "Name", "Value" : "ActiveELB"},
              {"Key" : "Side", "Value" : "active"}
          ]
        }
    },
    "InactiveELB" : {
        "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties" : {
          "LoadBalancerName" : "InactiveELB",
          "Listeners" : [ {
              "LoadBalancerPort" : "80",
              "InstancePort" : "8080",
              "Protocol" : "HTTP"
          }],
          "HealthCheck" : {
              "Target" : "TCP:8080",
              "HealthyThreshold" : "2",
              "UnhealthyThreshold" : "5",
              "Interval" : "30",
              "Timeout" : "5"
          },
          "SecurityGroups" : [ { "Ref": "LbSecurityGroup" } ],
          "Subnets" : [ { "Ref" : "SubnetId"} ],
          "Tags" : [
              {"Key" : "Name", "Value" : "InactiveELB"},
              {"Key" : "Side", "Value" : "inactive"}
          ]
        }
    },
    "CiEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": { "Ref": "CiEc2Instance" }
      }
    },
    "CiEc2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "SubnetId" : { "Ref": "SubnetId" },
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "SecurityGroupIds" : [
            { "Ref" : "SshSecurityGroup" }
          ],
          "Tags" : [
              {"Key" : "Name", "Value" : "ci"},
              {"Key" : "ServerType", "Value" : "ci"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "yum clean all\n",
          "yum -y install epel-release\n",
          "yum -y install ansible\n",
          "sed -i 's/.*host_key_checking.*/host_key_checking = False/g' /etc/ansible/ansible.cfg\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/id_rsa > /home/centos/.ssh/id_rsa\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys_local >> /home/centos/.ssh/authorized_keys\n",
          "chmod 400 /home/centos/.ssh/id_rsa\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "sytemctl restart sshd.service\n",
          "curl -O https://bootstrap.pypa.io/get-pip.py\n",
          "python get-pip.py\n",
          "pip install awscli\n"
          ]]}} 
      }
    }
  },
  "Outputs" : {
    "ActiveELB" : {
      "Description" : "Active ELB",
      "Value" : { "Fn::GetAtt" : [ "ActiveELB" , "DNSName" ] }
    },
    "InactiveELB" : {
      "Description" : "Inactive ELB",
      "Value" : { "Fn::GetAtt" : [ "InactiveELB" , "DNSName" ] }
    },
    "CiAccessIp" : {
      "Description" : "CI access IP address",
      "Value" : { "Ref" : "CiEip" }
    },
    "LbSecurityGroup" : {
      "Description" : "LB Security Group ID",
      "Value" : { "Fn::GetAtt" : [ "LbSecurityGroup" , "GroupId" ] }
    },
    "SshSecurityGroup" : {
      "Description" : "SSH Security Group ID",
      "Value" : { "Fn::GetAtt" : [ "SshSecurityGroup" , "GroupId" ] }
    }
  }
}

